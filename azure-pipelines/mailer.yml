# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pool: u4.local


variables: 
   major: 0
   minor: 0
   brpatch: $[counter(variables['build.sourcebranchname'], 0)]
   revision: $(Build.BuildId)

name: $(major).$(minor).$(revision)-$(Build.SourceBranchName)

stages: 
- stage: Building
  jobs:
  - job: Restore
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: 'src/Mailer/**/*.csproj'
        feedsToUse: 'select'
  - job: Build 
    dependsOn: Restore
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'src/Mailer/Mailer.Api'
        arguments: '-c Release'
  - job: Publish
    dependsOn: Build
    variables:
      vassemblyersion: $(major).$(minor).$(revision)
      version: $(major).$(minor).$(revision)-$(Build.SourceBranchName)
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: 'src/Mailer/Mailer.Api'
        arguments: '-c Release  --output $(Build.ArtifactStagingDirectory) /p:AssemblyVersion=$(vassemblyersion) /p:Version=$(version)'
        zipAfterPublish: True
        modifyOutputPath: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathToPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'Mailer'
