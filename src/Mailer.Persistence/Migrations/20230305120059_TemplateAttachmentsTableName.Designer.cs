// <auto-generated />
using System;
using Mailer.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Mailer.Persistence.Migrations
{
    [DbContext(typeof(MailerDbContext))]
    [Migration("20230305120059_TemplateAttachmentsTableName")]
    partial class TemplateAttachmentsTableName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AttachmentTemplate", b =>
                {
                    b.Property<int>("AttachmentsId")
                        .HasColumnType("integer");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer");

                    b.HasKey("AttachmentsId", "TemplateId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplateAttachments", (string)null);
                });

            modelBuilder.Entity("Mailer.Domain.Entities.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<bool>("Inline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.ToTable("Attachments", (string)null);
                });

            modelBuilder.Entity("Mailer.Domain.Entities.EmailType", b =>
                {
                    b.Property<string>("TypeName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("TypeName");

                    b.ToTable("EmailTypes", (string)null);
                });

            modelBuilder.Entity("Mailer.Domain.Entities.Language", b =>
                {
                    b.Property<string>("CultureName")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("CultureName");

                    b.ToTable("Languages", (string)null);
                });

            modelBuilder.Entity("Mailer.Domain.Entities.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BodyEncoded")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("LanguageCultureName")
                        .IsRequired()
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("LanguageCultureName");

                    b.HasIndex("TypeName");

                    b.ToTable("Templates", (string)null);
                });

            modelBuilder.Entity("AttachmentTemplate", b =>
                {
                    b.HasOne("Mailer.Domain.Entities.Attachment", null)
                        .WithMany()
                        .HasForeignKey("AttachmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mailer.Domain.Entities.Template", null)
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mailer.Domain.Entities.Template", b =>
                {
                    b.HasOne("Mailer.Domain.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCultureName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mailer.Domain.Entities.EmailType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
